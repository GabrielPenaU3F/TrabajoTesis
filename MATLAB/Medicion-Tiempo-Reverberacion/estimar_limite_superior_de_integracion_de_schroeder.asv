function lim = estimar_limite_superior_de_integracion_de_schroeder(h, fs)
    
    %{
        Para estimar, primero se calcula un umbral inicial
        Luego, se aplica el método de dividir la señal en dos, una a
        cada lado del umbral. Los dos grupos de puntos resultantes
        se ajustan a dos respectivas rectas. Se selecciona como
        límite superior de integración el punto de intersección
        entre las mismas.
    %}

    n = 10;
    epsilon = 10^-10;
    umbral_inicial = encontrar_limite_respuesta_impulsional(h, n, epsilon, 1);
    h_abs = abs(h); %Porque queremos encontrar una 'recta envolvente'
    h_izquierda = h_abs(1:umbral_inicial);
    h_derecha = h_abs(umbral_inicial+1:end);
    t_izquierda = 0:1/fs:umbral_inicial/fs - 1/fs;
    t_derecha = (umbral_inicial+1)/fs:1/fs:length(h_abs)/fs; 
    [m_izquierda, b_izquierda] = efectuar_regresion_lineal(t_izquierda, h_izquierda);
    [m_derecha, b_derecha] = efectuar_regresion_lineal(t_derecha, h_derecha);
    
    t_interseccion = (b_derecha - b_izquierda) / (m_izquierda - m_derecha);
    lim = calcular_muestra(t_interseccion, 1/fs);
    
        %Graficar (opcional)
        t_izquierda = 0:1/fs:umbral_inicial;
        t_derecha = umbral_inicial+1:1/fs:length(h_abs)/fs - 1/fs;
        recta_izquierda = m_izquierda*t_izquierda + b_izquierda;
        recta_derecha = m_derecha*t_derecha + b_derecha;
        
    
end

